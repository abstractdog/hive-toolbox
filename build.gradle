plugins {
  id 'com.palantir.git-version' version '0.12.2'
  id 'nebula.ospackage-base' version '7.1.0'
  id 'groovy'
  id 'eclipse'
  id 'application'
  id "com.github.breadmoirai.github-release" version "2.2.9"
}

version = gitVersion()
mainClassName = 'hu.rxd.toolbox.Toolbox'

task createAllStartScripts() {
	ext.outputDir=new File(project.buildDir, 'scripts')
}

def scripts = [
  'applicator': 'hu.rxd.toolbox.Applicator',
  'toolbox':    'hu.rxd.toolbox.Toolbox',
  'sw2':	'hu.rxd.toolbox.HiveDevBoxSwitcher',
]
scripts.each() { scriptName, className ->
        def t = tasks.create(name: scriptName+'StartScript', type: CreateStartScripts) {
        mainClassName = className
        applicationName = scriptName
        outputDir = createAllStartScripts.outputDir
        classpath = jar.outputs.files + project.configurations.runtime
    }
    applicationDistribution.into("bin") {
	    from(t)
            fileMode = 0755
    }
    createAllStartScripts.dependsOn(t)
}

repositories { mavenCentral() }

dependencies{
  compile 'org.codehaus.groovy:groovy-all:2.4.+'

// almost raw - old adjust_patch
  compile('org.codehaus.groovy.modules.http-builder:http-builder:0.7')
  compile('oauth.signpost:signpost-core:1.2.1.2')
  compile('oauth.signpost:signpost-commonshttp4:1.2.1.2')


  compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.0'
  compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.9.0'

  testCompile 'junit:junit:4.12'

  compile 'com.google.guava:guava:23.0'

  compile('net.rcarz:jira-client:0.5') {
    exclude group: 'junit'
  }
  
  compile 'com.offbytwo.jenkins:jenkins-client:0.3.7'
  
//  compile group: 'org.apache.commons', name: 'commons-vfs', version: '1.+'
// https://mvnrepository.com/artifact/org.apache.commons/commons-vfs2
compile group: 'org.apache.commons', name: 'commons-vfs2', version: '2.+'
compile group: 'org.apache.commons', name: 'commons-compress', version: '1.+'
compile group: 'commons-cli', name: 'commons-cli', version: '1.4'
compile group: 'commons-codec', name: 'commons-codec', version: '1.+'
compile group: 'commons-net', name: 'commons-net', version: '3.+'

compile 'com.jcraft:jsch:0.1.53'	


compile 'de.schlichtherle.truezip:truezip-file:7.7.10'
compile 'de.schlichtherle.truezip:truezip-path:7.7.10'
compile 'de.schlichtherle.truezip:truezip-driver-tar:7.7.10'
compile 'de.schlichtherle.truezip:truezip-driver-http:7.7.10'
compile 'de.schlichtherle.truezip:truezip:7.7.10'
compile 'de.schlichtherle.truezip:truezip-kernel:7.7.10'



compile 'org.slf4j:slf4j-simple:1.7.25'

compile 'hu.rxd:lexirex:+'
// https://mvnrepository.com/artifact/org.eclipse.jgit/org.eclipse.jgit
compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '4.11.0.201803080745-r'

  compile 'org.rauschig:jarchivelib:0.7.1'
// https://mvnrepository.com/artifact/org.codehaus.plexus/plexus-utils
compile group: 'org.codehaus.plexus', name: 'plexus-utils', version: '3.2.1'

}

task toolboxDeb(type: Deb) {
  def targetDir='/usr/local/hive-toolbox/'
	from(installDist.outputs) {
    into targetDir
  }
  from('src/main/scripts') {
    into "/usr/bin"
  }

  scripts.each { name,clazz ->
    link("/bin/${name}","${targetDir}/bin/${name}")
  }
}

if(System.getenv('GITHUB_REPO_TOKEN')==null) {
	logger.warn('You dont have GITHUB_REPO_TOKEN set => release disabled')
}else{
githubRelease {
    token System.getenv('GITHUB_REPO_TOKEN')
    owner "kgyrtkirk"
    tagName project.version
    releaseAssets toolboxDeb.outputs
}
}

tasks.githubRelease.doFirst {
  if(project.version.contains("dirty") || project.version.contains('-')) {
    throw new RuntimeException("Please don't do dirty/intermediate releases " + project.version);
  }
}
